# 快速排序法

"""
快速排序 (Quick Sort) 的想法是說，先找一個基準點，然後派兩個代理人分別從資料的兩邊
開始往中間找，如果右邊找到一個值比基準點小，左邊找到一個值比基準點大，就讓他們互換。
反覆找並互換，直到兩個人相遇。然後再將相遇的點跟基準點互換。第一輪結束。
"""

"""
原始狀態： 基準點 + 一堆資料......
第一輪後的狀態： 比基準點小的資料 ＋ 基準點 ＋ 比基準點大的資料

接下來再分別從兩邊資料做子循環，但做法跟上面一樣，這就用到了遞迴的概念。

較小資料： (小)基準點 + 小資料 --> 小小資料 + (小)基準點 + 小大資料
較大資料： (大)基準點 + 大資料 --> 大小資料 + (大)基準點 + 大大資料

接下來就重複以上的動作，直到排列完畢。

直接用例子來說明好了。一樣用身高來比大小，分為 1~10。假設基準點為 8。
(8)　6　1　10　5　3　9　2　7　4

從兩邊開始找。左邊找比基準點大，右邊找比基準點小。
(8)　[6]　1　 10　 5　3　9　2　7　[4]
(8)　 6　[1]　10   5　3　9　2　7　[4]
(8)　 6　 1　[10]　5　3　9　2　7　[4]

然後互換。
(8) 　6　 1　 [4]　5　3　9　2　7　[10]

繼續往下找
(8)　 6　 1　 4　[5]　3　 9 　2　[7]　10
(8)　 6　 1　 4　 5　[3]　9　 2　[7]　10
(8)　 6　 1　 4　 5　 3　[9]　2　[7]　10

再互換
(8)　6　1　4　5　3　[7]　2　[9]　10

繼續往下找，但左右代理人相遇在 2。
(8)　6　1　4　5　3　7　[2]　9　10

與基準點互換
[2]　6　1　4　5　3　7　(8)　9　10

分為兩個子循環。
( 2　6　1　4　5　3　7 ) 　　+　　8 (基準點)　　+ 　　( 9　10 )

再分別重複以上動作。
較小資料：2　6　1　4　5　3　7
較大資料：9　10
"""

data = [89, 34, 23, 78, 67, 100, 66, 29, 79, 55, 78, 88, 92, 96, 96, 23]

def quick_sort(data, left, right):
    if left > right:
        return
    # Set reference point
    i = left   # 0
    j = right  # len(data)
    key = data[left]
    # print(i, j, key)
    while i != j:
        while data[j] > key and i < j:
            j-=1
        while data[i] <= key and i < j:
            i+=1
        if i < j:
            data[i], data[j] = data[j], data[i]
           
    # 將基準點歸換至代理人相遇點
    data[left] = data[i] 
    data[i] = key
    print(i)

    # 拆成兩個部份的循環
    quick_sort(data, left, i-1)   # 交會點左側子循環
    quick_sort(data, i+1, right)  # 交會點右側子循環

quick_sort(data, 0, len(data)-1)
